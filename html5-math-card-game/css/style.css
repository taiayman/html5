/* General Styles */
body {
    font-family: 'Roboto', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
}

#game-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background-image: linear-gradient(to bottom right, #6c63ff, #03a9f4);
    color: #ffffff;
    perspective: 1000px;

}



.page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #ffffff;
    color: #333333;
}

.page.hidden {
    display: none;
}


#start-page {
    background-color: lightgray; /* Add a temporary background color */
    background-image: url('../assets/images/game_background.jpg');
    background-size: cover;
    background-position: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
}

.play-btn {
    font-family: 'Press Start 2P', cursive;
    padding: 1rem 1rem;
    margin: 1rem;
    cursor: pointer;
    margin-top: 500px;
    background-image: url(../assets/images/button.png);
    width: 200px;
    height: 80px;
    background-size: cover;
    background-position: center;
    color: #ffffff;
    border: none;
    text-align: center;
    background-color: #ffffff00;
    border-radius: 0.5rem;
    font-size: 13px;
    transition: transform 0.3s;
}


.play-btn:hover {
    transform: translateY(-4px);
}

#game-page {
    background-image: url('../assets/images/game_background.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    height: 100vh;
    margin: 0;
    position: relative; /* Needed for absolute positioning of child */
}

.background-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.074); /* Semi-transparent white background */
    backdrop-filter: blur(3px); /* This applies the blur */
}


#timer-score {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

/* This will position the music toggle to the top right */
#music-toggle {
    position: absolute;
    top: 20px;
    right: 20px;
}

/* Additional styling for timer and score */
#timer, #score {
    background-color: #fff;
    padding: 10px 20px;
    margin: 5px 0;  /* Adjust margin as needed */
    border: 1px solid #ddd;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Soft shadow for depth */
}

/* Styling for the music button */
#toggle-music {
    background-color: #fff;
    border: none;
    padding: 10px;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    cursor: pointer;
}

#pvp-text {
    position: absolute;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 24px;
    font-weight: bold;
    text-align: center;
    background-color: #fff;
    padding: 10px 20px;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: none; /* Hide by default */
}


#game-board {
    transform: perspective(1000px) rotateX(39deg);
    transform-origin: bottom;
    transform-style: preserve-3d;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 25px;
    padding-top: 130px;
    margin-bottom: 8rem;
}

#players-hand {
    display: flex;
    justify-content: center;
    width: 100%;
    margin-bottom: 2rem;
    gap: 33px;
    position: relative;
    height: 180px; /* Adjust if necessary */
    overflow: visible; /* Show overlapped parts of cards */
}

.card {
    display: flex;
    flex-direction: column;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 0.8rem;
    height: 180px;
    width: 120px;
    font-size: 25px;
    font-weight: bold;
    cursor: pointer;
    box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
    padding: 0.5rem;
    position: relative;
    overflow: hidden;
    transition: box-shadow 0.3s;
}

/* Apply the fade-in animation to the player's hand cards only */
#players-hand .card {
    animation: fadeInCards 0.5s ease-out forwards;
    animation-delay: var(--animation-delay, 0s); /* Use a custom property for delay */
}



@keyframes fadeInCards {
    from {
        opacity: 0; /* Start fully transparent */
    }
    to {
        opacity: 1; /* Fade to fully opaque */
    }
}


/* Staggering the animation with specific delays and transformations */
#players-hand .card:nth-child(1) {
    animation-delay: 0.1s;
    transform: rotate(-20deg) translateX(-100px);
}
#players-hand .card:nth-child(2) {
    animation-delay: 0.2s;
    transform: rotate(-10deg) translateX(-50px);
}
#players-hand .card:nth-child(3) {
    animation-delay: 0.3s;
    transform: rotate(0deg) translateX(0);
}
#players-hand .card:nth-child(4) {
    animation-delay: 0.4s;
    transform: rotate(10deg) translateX(50px);
}
#players-hand .card:nth-child(5) {
    animation-delay: 0.5s;
    transform: rotate(20deg) translateX(100px);
}


.card .card-value {
    position: absolute;
    top: 5px; /* Adjust as needed */
    left: 8px; /* Adjust as needed */
    /* Add styles for the card value text */
}
.correct-message {
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* Add other styling for the correct message text as desired */
}


.card.top-row {
    transform: rotateX(-15deg); /* This value should be larger than the bottom row */
}

.card.bottom-row {
    transform: rotateX(-5deg); /* This value should be smaller than the top row */
}


.card .card-value {
    align-self: flex-start; /* this may not be needed if there's no flexbox applied within the card itself */
    width: 100%; /* ensures the text container spans the full width of the card */
    text-align: left;
}


.card.dragging {
    transform: translateZ(20px) rotateX(10deg) rotateY(10deg);
    box-shadow: 0 16px 24px rgba(0, 0, 0, 0.2), 0 6px 8px rgba(0, 0, 0, 0.1);
    z-index: 100;
}
.card.played {
    animation: playCard 0.5s forwards;
}

.card:hover, .card.selected {
    transform: translateY(-10px) scale(1.1); /* Enhance interactivity with visual cues */
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.25);
}

@keyframes playCard {
    to {
        opacity: 0;
        transform: scale(0.5);
    }
}

.card.correct {
    background-color: green; /* Green background for correct answers */
    color: white; /* White text for better visibility */
}

.card.incorrect {
    background-color: red; /* Red background for incorrect answers */
    color: white; /* White text for better visibility */
}


.page.hidden {
    display: none;
}

/* Miscellaneous */
.hidden {
    display: none !important;
}

button:focus {
    outline: none;
}


@keyframes pulse {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(128, 0, 128, 0.7);
    }
    50% {
        box-shadow: 0 0 0 10px rgba(128, 0, 128, 0);
    }
}


@media (max-width: 768px) {

    .card.selected {
        animation: pulse 1.5s infinite;
        border: 3px solid purple; /* Add a purple border for a static indication */
    }
    

    #game-board {
        transform: perspective(1000px) rotateX(39deg);
        transform-origin: bottom;
        transform-style: preserve-3d;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 25px;
        padding-top: 130px;
        margin-bottom: 8rem;
    }
    .card {
        display: flex;
        flex-direction: column;
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 0.8rem;
        height: 180px;
        width: 118px;
        font-size: 25px;
        touch-action: none;
        font-weight: bold;
        cursor: pointer;
        box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
        transition: transform 0.3s, box-shadow 5s;
        touch-action: manipulation; 
        transform-style: preserve-3d;
        will-change: transform;
        padding: 0.5rem;
      
        box-shadow: -5px -5px 10px rgba(0, 0, 0, 0.2), 5px 5px 15px rgba(0, 0, 0, 0.3);
        transform: rotateX(369); /* Adjust this angle as needed */
        transform-origin: bottom center; 
    
        justify-content: flex-start; /* aligns content to the top */
        align-items: flex-start; /* aligns content to the left */
        padding: 0.5rem;

        
        transition: transform 0.3s ease; /* Smooth transition for moving card */
        cursor: pointer; /* Indicates the card can be interacted with */
    
    
    
    }

    .card.correct {
        background-color: green; /* Green background for correct answers */
        color: white; /* White text for better visibility */
        position: relative; /* Position relative to place the central span correctly */
    }
    
    .card.incorrect {
        background-color: red; /* Red background for incorrect answers */
        color: white; /* White text for visibility */
        position: relative; /* Position relative to place the central span correctly */
    }
    
    .card .status-message {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 16px; /* Adjust based on your design */
        color: white;
        font-weight: bold;
    }
    .status-message {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        font-weight: bold;
        font-size: 1em; /* Adjust based on your card size */
    }
    

    .card .card-value {
        position: absolute;
        top: 5px; /* Adjust as needed */
        left: 8px; /* Adjust as needed */
        /* Add styles for the card value text */
    }
    .correct-message {
        position: absolute;
        top: 45%;
        left: 50%;
        transform: translate(-50%, -50%);
        /* Add other styling for the correct message text as desired */
    }

    #players-hand {
        /* ... existing styles ... */
        height: 160px; /* Adjust if necessary */
        padding-bottom: 20px; /* To lift cards up */
    }
    
    #players-hand .card {
        width: 22vw; /* Responsive card width */
        height: calc(24vw * 1.4); /* Maintain aspect ratio */
        position: absolute;
        bottom: 0; /* Align at the bottom of the parent container */
        left: 47%; /* Start at the center */
        transform-origin: bottom center; /* Pivot point for rotation */
        margin-left: -9vw; /* Offset to the left by half the width of the card */
        touch-action: manipulation; 
    }

    #players-hand {
        display: flex;
        justify-content: center;
        width: 120%;
        gap: 33px;
        position: relative;
        height: 180px;
        overflow: visible;
      }

    /* More open fanned-out effect with less overlapping */
    #players-hand .card:nth-child(1) { transform: translateX(-100%) rotate(-22deg); z-index: 1; }
    #players-hand .card:nth-child(2) { transform: translateX(-50%) rotate(-11deg); z-index: 2; }
    #players-hand .card:nth-child(3) { transform: translateX(0%) rotate(0deg); z-index: 3; }
    #players-hand .card:nth-child(4) { transform: translateX(50%) rotate(11deg); z-index: 2; }
    #players-hand .card:nth-child(5) { transform: translateX(100%) rotate(22deg); z-index: 1; }

    /* Continue the pattern if you have more cards, adjust as necessary */
    #players-hand .card:nth-child(6) { transform: translateX(150%) rotate(33deg); z-index: 1; }
    /* ...and so on for more cards */
    


}



.popup {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 999;
}

.popup-content {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    text-align: center;
}

.popup-content button {
    margin: 10px;
    padding: 8px 16px;
    font-size: 16px;
    cursor: pointer;
}
